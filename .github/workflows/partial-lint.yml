# Lints only in modified files
name: Partial Pylint

on:
  pull_request:
    branches:
      - dev

jobs:
  lintchanges:
    name: Retrieve and lint changed files
    runs-on: ubuntu-latest #runs-on: ubuntu-latest | windows-latest | macos-latest
    outputs: 
      files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch enough history to detect changes

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **/*.py
          files_ignore: |
            !**.py
            
      - name: Check for Any Changes
        run: |
          echo "any_changed=${{ steps.changed-files.outputs.any_changed }}" >> $GITHUB_OUTPUT
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9.x'
      
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Lint all changed Python files
        run: |
          # Extract the list of changed files
          changed_files="${{ steps.changed-files.outputs.all_changed_files }}"
          if [[ -z "${changed_files// }" ]]; then
            echo "No Python files changed."
            exit 0
          fi
          
          # Lint each file and collect errors
          exit_code=0
          for file in $changed_files; do
            pylint --disable=R0913,W0511,W0613 "$file" || exit_code=$?
          done
          
          # Exit with the appropriate code
          exit $exit_code
